{
    "id": "dd469d8a-c949-4392-87ed-7bebb195a03e",
    "SKU": "000011",
    "interpreter": 1,
    "type": "MULT",
    "language": "NA",
    "knowledgeArea": "embedded",
    "category": "fundamentos de linguagem C",
    "subCategory": "tipos de dados",
    "level": "Medium",
    "tagsOrConcepts": [
        "dados binários",
        "hexadecimal",
        "conversão de base"
    ],
    "text": [
        "Um certo protocolo de comunicação subdivide suas mensagens em diferentes campos. Os campos são numerados e o comportamento de cada campo específico (seu tamanho e tipo de dado que ele contém) é padronizado. Cada um dos campos é opcional na mensagem - ou seja, uma mensagem pode conter apenas os campos 1, 5, 6 e 8, por exemplo, enquanto outra mensagem pode conter os campos 2 e 3. A numeração dos campos vai de 1 até 32.",
        "Um mapa de bits no início de cada mensagem indica os campos presentes. Cada byte deve ser lido da esquerda para a direita, na ordem de chegada. Considere os primeiros 10 bytes de uma mensagem:",
        "`0x67 0xC6 0x69 0x73 0x51 0xff 0x4A 0xEC 0x29 0xCD ...`",
        "Estão presentes os campos:"
    ],
    "alternatives": [
        {
            "id": "02a66ddc-7847-47f0-85de-9b5d938ada19",
            "feedback": "Convertendo o primeiro byte (representado pelo valor hexadecimal 67) para binário, temos: 01100111. Seguindo as regras apresentadas (campos numerados a partir de 1, ler bytes da esquerda para a direita), temos os campos 2, 3, 6, 7 e 8 indicados no primeiro byte. Essa lógica se aplica aos primeiros 4 bytes (pois os campos são numerados até 32, e temos 8 bits em cada byte).",
            "correct": true,
            "text": "2, 3, 6, 7, 8, 9, 10, 14, 15, 18, 19, 21, 24, 26, 27, 28, 31, 32"
        },
        {
            "id": "df549996-1315-49c0-b7d8-c5acbc0656da",
            "feedback": "Convertendo o primeiro byte (representado pelo valor hexadecimal 67) para binário, temos: 01100111. Seguindo as regras apresentadas (campos numerados a partir de 1, ler bytes da esquerda para a direita), temos os campos 2, 3, 6, 7 e 8 indicados no primeiro byte. A alternativa inicia com o campo 1.",
            "correct": false,
            "text": "1, 2, 5, 6, 7, 9, 12, 14, 15, 18, 19, 23, 24, 25, 26, 27, 30, 31"
        },
        {
            "id": "b934cc37-5ada-4b8c-8dec-c80d6a8b7a3f",
            "feedback": "Convertendo o primeiro byte (representado pelo valor hexadecimal 67) para binário, temos: 01100111. Seguindo as regras apresentadas (campos numerados a partir de 1, ler bytes da esquerda para a direita), temos os campos 2, 3, 6, 7 e 8 indicados no primeiro byte. A alternativa inicia com o campo 1.",
            "correct": false,
            "text": "1, 2, 3, 6, 7, 10, 11, 15, 16, 17, 20, 22, 23, 25, 26, 29 30, 31"
        },
        {
            "id": "e34f9f4b-c869-487c-910f-4760720ea1a9",
            "feedback": "Convertendo o primeiro byte (representado pelo valor hexadecimal 67) para binário, temos: 01100111. Seguindo as regras apresentadas (campos numerados a partir de 1, ler bytes da esquerda para a direita), temos os campos 2, 3, 6, 7 e 8 indicados no primeiro byte. A alternativa inicia com o campo 1.",
            "correct": false,
            "text": "1, 2, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 23, 25, 26, 27, 30, 31"
        },
        {
            "id": "f2ed354d-d0df-4050-bb1e-7c38d637d37a",
            "feedback": "Pela regra do protocolo descrito acima, campos são numerados a partir de 1. A alternativa sinaliza um campo 0.",
            "correct": false,
            "text": "0, 1, 4, 5, 6, 8, 11, 13, 14, 17, 18, 22, 23, 24, 25, 26, 29, 30"
        }
    ]
}