{
    "id": "1db56c5c-6a2a-48b6-8e99-449431ddcf83",
    "SKU": "AS-FE-001",
    "interpreter": 1,
    "type": "MULT",
    "language": "javascript",
    "knowledgeArea": "Front-End",
    "category": "Typescript",
    "subCategory": "Tipagem",
    "level": "SENIOR",
    "tagsOrConcepts": [
        "SOLID",
        "Design Patterns"
    ],
    "text": [
        "Qual design pattern é ilustrada no código abaixo?",
        "```class SomePattern{",
        "",
        "    constructor(){ ",
        "        this.resultObject = new SomeObject()",
        "    }",
        "",
        "    configStep1(configObject1) { this.resultObject.configObject1 = configObject1; return this }",
        "    configStep2(configObject2) { this.resultObject.configObject2 = configObject2; return this }",
        "    configStep3(configObject3) { this.resultObject.configObject3 = configObject3; return this }",
        "",
        "    create(){ ",
        "        const result = {...this.resultObject}",
        "        this.resultObject = new SomeObject()",
        "        return result",
        "    }",
        "",
        "}```"
    ],
    "alternatives": [
        {
            "id": "2f431aa9-05d5-4527-9418-f30e2c0ffc62",
            "text": "Factory",
            "feedback": "É parecido, mas não é um factory. Factory cria implementações sem classes concretas conhecidas, mas não faz configurações.",
            "correct": true
        },
        {
            "id": "bfbe2e39-b972-4f39-853f-a01f163fe895",
            "text": "Abstract Factory",
            "feedback": "É parecido, mas não é um factory. Factory cria implementações sem classes concretas conhecidas, mas não faz configurações.",
            "correct": false
        },
        {
            "id": "923435f1-abf9-440f-a7f9-c6c1de1c7bbe",
            "text": "Builder",
            "feedback": "Correta",
            "correct": true
        },
        {
            "id": "124a9867-7c8a-449c-9832-7b78705c7adb",
            "text": "Singleton",
            "feedback": "Não há o reaproveitamento da mesma instância sempre que create() é invocado",
            "correct": false
        }
    ]
}